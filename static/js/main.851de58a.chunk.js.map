{"version":3,"sources":["components/ToDoList/toDoList.style.ts","components/ToDo/ToDo.style.ts","styles/theme.ts","styles/styles.js","components/ToDoInput/ToDoInput.style.ts","components/ToDoInput/index.ts","components/ToDoInput/ToDoInput.tsx","components/ToDo/ToDo.tsx","utils/isValidInput.ts","components/ToDoList/index.ts","components/ToDoList/ToDoList.tsx","pages/home/index.ts","pages/home/home.tsx","pages/notFound/index.ts","pages/notFound/notFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledToDoList","styled","div","StyledToDo","theme","colors","primary","secondary","secondaryBright","white","black","grey","background","Page","CheckBox","Title","h1","Wrapper","InputWrapper","ToDoButtons","Button","StyledToDoInput","input","ToDoInput","props","onSubmit","edit","useState","setInput","handleChange","event","target","value","handleSubmitAdd","preventDefault","id","Math","floor","random","text","handleSubmitEdit","type","placeholder","name","onChange","e","maxLength","required","onClick","iconStyle","margin","ToDo","toDo","markToDo","updateToDo","removeToDo","setEdit","style","display","isMarked","maxWidth","className","isValidInput","trim","ToDoList","toDos","setToDos","todoId","newValueText","previousToDos","map","item","updatedToDos","removedToDos","filter","newToDos","index","reverse","Home","notFound","to","App","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.851de58a.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nexport const StyledToDoList = styled.div`\r\ndisplay: grid;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column;\r\ngrid-template-columns: 120%;\r\n`; \r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const StyledToDo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  margin: 0.5em 0.5em 0.5em 0;\r\n  padding: 0.2em 0.2em 0.2em 0;\r\n  overflow-wrap: anywhere;\r\n`\r\n","const theme = {\r\n  colors: {\r\n    primary: \"#280003\",\r\n    secondary: \"#EE5622\",\r\n    secondaryBright: \"#ffb399\",\r\n    white: \"#FFFFFF\",\r\n    black: \"#17171a\",\r\n    grey: \"#e5e5e5\",\r\n    background: \"#e6ebe9\",\r\n  },\r\n}\r\n\r\nexport default theme\r\n","import styled from 'styled-components'\nimport theme from './theme'\n\n// TODO: Put important styled components in components directory\n\nexport const Page = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 2em;\n  font-family: 'Inter', sans-serif;\n  width: 100vw;\n`\nexport const CheckBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0.5em;\n  padding-left: 0.5em;\n`\n\nexport const Title = styled.h1`\n  font-size: 2.3rem;\n  display: block;\n  margin-bottom: 4vh;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-self: flex-start;\n  &:hover {\n    transition: 0.5s;\n    background-color: ${theme.colors.grey};\n  }\n`\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 1em;\n  border: 1px solid white;\n  border-radius: 5px;\n  &:hover {\n    border: 1px solid ${theme.colors.black};\n    border-radius: 5px;\n  }\n`\n\nexport const ToDoButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0%;\n  ${Wrapper}:hover & {\n    opacity: 1;\n  }\n`\n\nexport const Button = styled.div`\n  background-color: ${theme.colors.black};\n  color: ${theme.colors.white};\n  text-align: center;\n  padding: 5px 15px;\n  border-radius: 0 5px 5px 0;\n  outline: 0;\n  cursor: pointer;\n  white-space: nowrap;\n  border: 1px solid transparent;\n  &:hover {\n    box-shadow: 1px 2px 2px black;\n    background-color: ${theme.colors.secondary};\n    border: 1px solid transparent;\n  }\n`\n","import styled from 'styled-components'\r\nimport theme from '../../styles/theme'\r\n\r\nexport const StyledToDoInput = styled.input`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0;\r\n  border-bottom: 1px solid ${theme.colors.grey};\r\n  flex: wrap;\r\n  width: 100%;\r\n\r\n`; \r\n","import ToDoInput from './ToDoInput'\r\n\r\nexport default ToDoInput\r\n","import React, { useState } from 'react'\r\nimport { Button, InputWrapper, Wrapper } from '../../styles/styles'\r\nimport { IToDoInputProps } from '../../types/toDoInput'\r\nimport { StyledToDoInput } from './ToDoInput.style'\r\n\r\nconst ToDoInput = (props: IToDoInputProps) => {\r\n  const { onSubmit, edit } = props\r\n  const [input, setInput] = useState<string>('')\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value)\r\n  }\r\n\r\n  const handleSubmitAdd = (event) => {\r\n    event.preventDefault()\r\n\r\n    onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n    })\r\n    setInput('')\r\n  }\r\n\r\n  const handleSubmitEdit = (event) => {\r\n    event.preventDefault()\r\n\r\n    onSubmit({\r\n      id: edit?.id,\r\n      text: input,\r\n    })\r\n    setInput('')\r\n  }\r\n  return (\r\n    <InputWrapper>\r\n      <form onSubmit={handleSubmitEdit}>\r\n        {edit ? (\r\n          <Wrapper>\r\n            <StyledToDoInput\r\n              type=\"text\"\r\n              placeholder={edit.value}\r\n              value={input}\r\n              name=\"text\"\r\n              onChange={(e) => handleChange(e)}\r\n              maxLength={40}\r\n              required\r\n            />\r\n            <Button onClick={handleSubmitEdit} onSubmit={handleSubmitEdit}>\r\n              Edit to-do\r\n            </Button>\r\n          </Wrapper>\r\n        ) : (\r\n          // Header\r\n          <Wrapper>\r\n            <StyledToDoInput\r\n              type=\"text\"\r\n              placeholder=\"add new todo\"\r\n              value={input}\r\n              name=\"text\"\r\n              onChange={(e) => handleChange(e)}\r\n              maxLength={40}\r\n              required\r\n            />\r\n            <Button onClick={handleSubmitAdd} onSubmit={handleSubmitAdd}>\r\n              Add to-do\r\n            </Button>\r\n          </Wrapper>\r\n        )}\r\n      </form>\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default ToDoInput\r\n","import React, { useState } from 'react'\r\nimport { StyledToDo } from './ToDo.style'\r\nimport {\r\n  MdCheckBox,\r\n  MdCheckBoxOutlineBlank,\r\n  MdModeEdit,\r\n  MdDelete,\r\n} from 'react-icons/md'\r\nimport ToDoInput from '../ToDoInput'\r\nimport { IToDoProps } from '../../types/toDo'\r\nimport { IEdit } from '../../types/edit'\r\nimport { CheckBox, ToDoButtons, Wrapper } from '../../styles/styles'\r\n\r\nconst iconStyle = {\r\n  margin: '0.2em',\r\n}\r\n\r\nconst ToDo = ({ toDo, markToDo, updateToDo, removeToDo }: IToDoProps) => {\r\n  const [edit, setEdit] = useState<IEdit>({\r\n    id: null,\r\n    value: '',\r\n  })\r\n\r\n  const submitUpdate = (value) => {\r\n    updateToDo(value.id, value.text)\r\n    setEdit({\r\n      id: null,\r\n      value: '',\r\n    })\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <ToDoInput edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return (\r\n    <Wrapper style={{ display: 'flex' }}>\r\n      <StyledToDo onClick={() => markToDo(toDo.id)}>\r\n        {toDo.isMarked ? (\r\n          <CheckBox>\r\n            <MdCheckBox />\r\n          </CheckBox>\r\n        ) : (\r\n          <CheckBox>\r\n            <MdCheckBoxOutlineBlank />\r\n          </CheckBox>\r\n        )}\r\n        <div style={{ maxWidth: 'fit-content' }}>{toDo.text}</div>\r\n      </StyledToDo>\r\n      <ToDoButtons>\r\n        <MdModeEdit\r\n          className=\"icon\"\r\n          style={iconStyle}\r\n          onClick={() => setEdit({ id: toDo.id, value: toDo.text })}\r\n        />\r\n        <MdDelete\r\n          className=\"icon\"\r\n          style={iconStyle}\r\n          onClick={() => removeToDo(toDo.id)}\r\n        />\r\n      </ToDoButtons>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n","export const isValidInput = (text) => {\r\n  const toDoSanitazed = text.trim()\r\n  return !!toDoSanitazed\r\n}\r\n","import ToDoList from './ToDoList'\r\n\r\nexport default ToDoList\r\n","import React, { useState } from 'react'\nimport { StyledToDoList } from './toDoList.style'\nimport ToDo from '../ToDo/ToDo'\nimport ToDoInput from '../ToDoInput'\nimport { isValidInput } from '../../utils'\nimport { IToDoItem } from '../../types/toDo'\n\nconst ToDoList = () => {\n  const [toDos, setToDos] = useState<IToDoItem[]>([])\n\n  const addToDo = (toDo) => {\n    if (!isValidInput(toDo.text)) {\n      return\n    }\n\n    const newToDos = [...toDos, { ...toDo, isMarked: false }]\n\n    setToDos(newToDos)\n  }\n\n  const updateToDo = (todoId: number, newValueText: string) => {\n    if (!isValidInput(newValueText)) {\n      return\n    }\n\n    const previousToDos = toDos.map((item) => {\n      if (item.id === todoId) {\n        item.text = newValueText\n      }\n\n      return item\n    })\n\n    setToDos(previousToDos)\n  }\n\n  const markToDo = (id) => {\n    const updatedToDos = toDos.map((toDo) => {\n      if (toDo.id === id) {\n        toDo.isMarked = !toDo.isMarked\n      }\n      return toDo\n    })\n    setToDos(updatedToDos)\n  }\n\n  const removeToDo = (id) => {\n    const removedToDos = toDos.filter((toDo) => toDo.id !== id)\n\n    setToDos(removedToDos)\n  }\n\n  return (\n    <StyledToDoList>\n      <ToDoInput onSubmit={addToDo} />\n      {toDos\n        .map((toDo, index) => (\n          <ToDo\n            toDo={toDo}\n            key={index}\n            markToDo={markToDo}\n            updateToDo={updateToDo}\n            removeToDo={removeToDo}\n          />\n        ))\n        .reverse()}\n    </StyledToDoList>\n  )\n}\n\nexport default ToDoList\n","import Home from './home'\r\n\r\nexport default Home\r\n","import React from 'react'\nimport ToDoList from '../../components/ToDoList'\n\nimport { Page, Title } from '../../styles/styles'\n\nconst Home = () => {\n  return (\n    <Page>\n      <Title>Today's List</Title>\n      <ToDoList />\n    </Page>\n  )\n}\n\nexport default Home\n","import notFound from './notFound'\r\n\r\nexport default notFound\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Page } from '../../styles/styles'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Page>\r\n      <h1>Page not found</h1>\r\n      {/* TODO: Link styled as a button */}\r\n      <Link to=\"/todo-app-react\">Go back</Link>\r\n    </Page>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './pages/home'\r\nimport NotFound from './pages/notFound/'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/todo-app-react/\" component={Home} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\nimport { HashRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}