{"version":3,"sources":["components/Header/Header.style.ts","components/Header/index.ts","components/Header/Header.tsx","components/Title/Title.style.ts","utils/usePersistedState.ts","styles/styles.ts","components/Title/index.ts","components/Title/Title.tsx","components/ToDoList/toDoList.style.ts","components/ToDo/ToDo.style.ts","components/ToDoInput/ToDoInput.style.ts","components/ToDoInput/index.ts","components/ToDoInput/ToDoInput.tsx","components/ToDo/ToDo.tsx","utils/isValidInput.ts","components/ToDoList/index.ts","components/ToDoList/ToDoList.tsx","styles/themes/lightTheme.ts","styles/themes/darkTheme.ts","styles/global.ts","pages/home/index.ts","pages/home/home.tsx","pages/notFound/index.ts","pages/notFound/notFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledHeader","styled","div","props","theme","colors","primary","text","Header","useContext","ThemeContext","title","toggleTheme","style","display","justifyContent","alignItems","width","onChange","checked","checkedIcon","uncheckedIcon","offColor","grey","offHandleColor","secondaryBright","onColor","StyledTitle","h1","usePersistedState","key","initialState","useState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","Page","CheckBox","Wrapper","InputWrapper","background","secondary","ToDoButtons","Button","TitleWrapper","Title","setText","html","useRef","current","e","target","value","StyledToDoList","StyledToDo","StyledToDoInput","input","ToDoInput","onSubmit","edit","setInput","handleChange","event","handleSubmitAdd","preventDefault","id","handleSubmitEdit","border","type","placeholder","name","maxLength","required","onClick","iconStyle","margin","ToDo","toDo","markToDo","updateToDo","removeToDo","setEdit","isMarked","maxWidth","className","isValidInput","trim","ToDoList","toDos","setToDos","todoId","newValueText","previousToDos","map","item","updatedToDos","removedToDos","filter","newToDos","length","index","reverse","lightTheme","white","black","selection","darkTheme","GlobalStyle","createGlobalStyle","Home","setTheme","console","log","notFound","to","App","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbc34df5.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.div`\n  height: 2.5em;\n  background: ${props => props.theme.colors.primary};\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: ${props => props.theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & > div {\n    width: 100vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex: 1;\n    width: 100$;\n    padding: 1em;\n  }\n  `","import Header from './Header'\n\nexport default Header","import { useContext } from 'react'\nimport Switch from 'react-switch'\nimport { StyledHeader } from './Header.style'\nimport { ThemeContext } from 'styled-components'\nimport { IHeader } from '../../types/theme'\n\nconst Header = (props: IHeader) => {\n  const { colors, title } = useContext(ThemeContext)\n  const { toggleTheme } = props\n\n  return (\n    <StyledHeader>\n      <div>\n        <b>TO DO</b>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '5em',\n          }}\n        >\n          {title === 'light' ? '☽  ' : '☀   '}\n\n          <Switch\n            onChange={toggleTheme}\n            checked={title === 'light'}\n            checkedIcon={false}\n            uncheckedIcon={false}\n            offColor={colors.grey}\n            offHandleColor={colors.secondaryBright}\n            onColor={colors.secondaryBright}\n          />\n        </div>\n      </div>\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\r\n\r\nexport const StyledTitle = styled.h1`\r\n  font-size: 3rem;\r\n  display: block;\r\n  margin-top: 2em;\r\n`\r\n","import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\ntype Response<T> = [\n  T,\n  Dispatch<SetStateAction<T>>\n];\n\nfunction usePersistedState<T>( key: string, initialState: T ): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key)\n\n    if(storageValue){\n      return JSON.parse(storageValue);\n\n    } else {\n      return initialState\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state))\n  }, [key, state]);\n\n  return [state, setState]\n}\n\nexport default usePersistedState","import styled from 'styled-components'\n\n// TODO: Put important styled components in components directory\n\nexport const Page = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 2em;\n  font-family: 'Inter', sans-serif;\n  width: 100vw;\n`\nexport const CheckBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0.5em;\n  padding-left: 0.5em;\n`\n\nexport const Title = styled.h1`\n  font-size: 2.3rem;\n  display: block;\n  margin-bottom: 4vh;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-self: flex-start;\n  border-radius: 5px;\n  &:hover {\n    transition: 0.5s;\n    background-color: ${props => props.theme.colors.secondaryBright};\n  }\n`\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 1em;\n  border: 1px solid ${props => props.theme.colors.background};\n  border-radius: 5px;\n  background-color: ${props => props.theme.colors.background} ;\n  &:hover {\n    box-shadow: 1px 2px 2px ${props => props.theme.colors.secondary};\n    border: 1px solid ${props => props.theme.colors.secondary};\n    background-color: ${props => props.theme.colors.background}\n    input {\n      transition: 0.3s;\n      background-color: ${props => props.theme.colors.secondaryBright};\n      border-bottom: 1px solid transparent;\n    }\n  }\n\n`\n\nexport const ToDoButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0%;\n  color: ${props => props.theme.colors.text};\n  ${Wrapper}:hover & {\n    transition: 0.3s;\n    opacity: 1;\n  }\n`\n\nexport const Button = styled.div`\n  background-color: ${props => props.theme.colors.grey};\n  color: white;\n  text-align: center;\n  padding: 5px 15px;\n  border-radius: 0 5px 5px 0;\n  outline: 0;\n  cursor: pointer;\n  white-space: nowrap;\n  &:hover {\n    transition: 0.3s;\n    background-color: ${props => props.theme.colors.secondary};\n  }\n`\nexport const TitleWrapper = styled.div`\n  border-bottom: 1px solid ${props => props.theme.colors.secondary}; \n  min-width: 2em;\n  max-width: 80vw;\n  padding: 0 0.5em;\n  &:hover {\n    transition: 0.3s;\n    box-shadow: 1px 2px 2px ${props => props.theme.colors.secondaryBright};\n    background-color: ${props => props.theme.colors.secondaryBright};\n    border-bottom: 1px solid transparent;\n  }\n`\n","import Title from './Title'\r\n\r\nexport default Title\r\n","import { useRef } from 'react'\r\nimport { StyledTitle } from './Title.style'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport usePersistedState from '../../utils/usePersistedState'\r\nimport { TitleWrapper } from '../../styles/styles'\r\n\r\nconst Title = () => {\r\n  const [text, setText] = usePersistedState<any>('title', 'Add title')\r\n  const html = useRef('')\r\n\r\n  const handleChange = (e) => {\r\n    html.current = e.target.value\r\n    setText(html.current)\r\n  }\r\n\r\n  return (\r\n    <StyledTitle>\r\n      <TitleWrapper>\r\n        <ContentEditable\r\n          html={(html.current = text)}\r\n          onChange={handleChange}\r\n        ></ContentEditable>\r\n      </TitleWrapper>\r\n    </StyledTitle>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledToDoList = styled.div`\r\ndisplay: grid;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column;\r\ngrid-template-columns: 120%;\r\n`; \r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const StyledToDo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  margin: 0.5em 0.5em 0.5em 0;\r\n  padding: 0.2em 0.2em 0.2em 0;\r\n  overflow-wrap: anywhere;\r\n`\r\n","import styled from 'styled-components'\r\n\r\n// const { colors } = useContext(ThemeContext)\r\n\r\nexport const StyledToDoInput = styled.input`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0;\r\n  border-bottom: 1px solid ${props => props.theme.colors.grey};\r\n  flex: wrap;\r\n  width: 100%;\r\n  background-color: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.text};\r\n  padding: 0.5em;\r\n  \r\n`; \r\n","import ToDoInput from './ToDoInput'\r\n\r\nexport default ToDoInput\r\n","import React, { useState } from 'react'\r\nimport { Button, InputWrapper, Wrapper } from '../../styles/styles'\r\nimport { IToDoInputProps } from '../../types/toDoInput'\r\nimport { StyledToDoInput } from './ToDoInput.style'\r\n\r\nconst ToDoInput = (props: IToDoInputProps) => {\r\n  const { onSubmit, edit } = props\r\n  const [input, setInput] = useState<string>('')\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value)\r\n  }\r\n\r\n  const handleSubmitAdd = (event) => {\r\n    event.preventDefault()\r\n\r\n    onSubmit({\r\n      id: null,\r\n      text: input,\r\n    })\r\n    setInput('')\r\n  }\r\n\r\n  const handleSubmitEdit = (event) => {\r\n    event.preventDefault()\r\n\r\n    onSubmit({\r\n      id: edit?.id,\r\n      text: input,\r\n    })\r\n    setInput('')\r\n  }\r\n  return (\r\n    <InputWrapper>\r\n      <form onSubmit={handleSubmitEdit} style={{ border: 0 }}>\r\n        {edit ? (\r\n          <Wrapper>\r\n            <StyledToDoInput\r\n              type=\"text\"\r\n              placeholder={edit.value}\r\n              value={input}\r\n              name=\"text\"\r\n              onChange={(e) => handleChange(e)}\r\n              maxLength={40}\r\n              required\r\n            />\r\n            <Button onClick={handleSubmitEdit} onSubmit={handleSubmitEdit}>\r\n              Edit to-do\r\n            </Button>\r\n          </Wrapper>\r\n        ) : (\r\n          // Header\r\n          <Wrapper>\r\n            <StyledToDoInput\r\n              type=\"text\"\r\n              placeholder=\"add new todo\"\r\n              value={input}\r\n              name=\"text\"\r\n              onChange={(e) => handleChange(e)}\r\n              maxLength={40}\r\n              required\r\n            />\r\n            <Button onClick={handleSubmitAdd} onSubmit={handleSubmitAdd}>\r\n              Add to-do\r\n            </Button>\r\n          </Wrapper>\r\n        )}\r\n      </form>\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default ToDoInput\r\n","import React, { useState } from 'react'\r\nimport { StyledToDo } from './ToDo.style'\r\nimport {\r\n  MdCheckBox,\r\n  MdCheckBoxOutlineBlank,\r\n  MdModeEdit,\r\n  MdDelete,\r\n} from 'react-icons/md'\r\nimport ToDoInput from '../ToDoInput'\r\nimport { IToDoProps } from '../../types/toDo'\r\nimport { IEdit } from '../../types/edit'\r\nimport { CheckBox, ToDoButtons, Wrapper } from '../../styles/styles'\r\n\r\nconst iconStyle = {\r\n  margin: '0.2em',\r\n}\r\n\r\nconst ToDo = ({ toDo, markToDo, updateToDo, removeToDo }: IToDoProps) => {\r\n  const [edit, setEdit] = useState<IEdit>({\r\n    id: null,\r\n    value: '',\r\n  })\r\n\r\n  const submitUpdate = (value) => {\r\n    updateToDo(value.id, value.text)\r\n    setEdit({\r\n      id: null,\r\n      value: '',\r\n    })\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <ToDoInput edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return (\r\n    <Wrapper style={{ display: 'flex' }}>\r\n      <StyledToDo onClick={() => markToDo(toDo.id)}>\r\n        {toDo.isMarked ? (\r\n          <CheckBox>\r\n            <MdCheckBox />\r\n          </CheckBox>\r\n        ) : (\r\n          <CheckBox>\r\n            <MdCheckBoxOutlineBlank />\r\n          </CheckBox>\r\n        )}\r\n        <div style={{ maxWidth: 'fit-content' }}>{toDo.text}</div>\r\n      </StyledToDo>\r\n      <ToDoButtons>\r\n        <MdModeEdit\r\n          className=\"icon\"\r\n          style={iconStyle}\r\n          onClick={() => setEdit({ id: toDo.id, value: toDo.text })}\r\n        />\r\n        <MdDelete\r\n          className=\"icon\"\r\n          style={iconStyle}\r\n          onClick={() => removeToDo(toDo.id)}\r\n        />\r\n      </ToDoButtons>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n","export const isValidInput = (text) => {\r\n  const toDoSanitazed = text.trim()\r\n  return !!toDoSanitazed\r\n}\r\n","import ToDoList from './ToDoList'\r\n\r\nexport default ToDoList\r\n","import { StyledToDoList } from './toDoList.style'\r\nimport ToDo from '../ToDo/ToDo'\r\nimport ToDoInput from '../ToDoInput'\r\nimport { isValidInput } from '../../utils'\r\nimport { IToDoItem } from '../../types/toDo'\r\nimport usePersistedState from '../../utils/usePersistedState'\r\n\r\nconst ToDoList = () => {\r\n  const [toDos, setToDos] = usePersistedState<IToDoItem[]>('todos', [])\r\n\r\n  const addToDo = (toDo) => {\r\n    if (!isValidInput(toDo.text)) {\r\n      return\r\n    }\r\n\r\n    const newToDos = [\r\n      ...toDos,\r\n      { ...toDo, id: toDos.length + 1, isMarked: false },\r\n    ]\r\n\r\n    setToDos(newToDos)\r\n  }\r\n\r\n  const updateToDo = (todoId: number, newValueText: string) => {\r\n    if (!isValidInput(newValueText)) {\r\n      return\r\n    }\r\n\r\n    const previousToDos = toDos.map((item) => {\r\n      if (item.id === todoId) {\r\n        item.text = newValueText\r\n      }\r\n\r\n      return item\r\n    })\r\n\r\n    setToDos(previousToDos)\r\n  }\r\n\r\n  const markToDo = (id) => {\r\n    const updatedToDos = toDos.map((toDo) => {\r\n      if (toDo.id === id) {\r\n        toDo.isMarked = !toDo.isMarked\r\n      }\r\n      return toDo\r\n    })\r\n    setToDos(updatedToDos)\r\n  }\r\n\r\n  const removeToDo = (id) => {\r\n    const removedToDos = toDos.filter((toDo) => toDo.id !== id)\r\n\r\n    setToDos(removedToDos)\r\n  }\r\n\r\n  return (\r\n    <StyledToDoList>\r\n      <ToDoInput onSubmit={addToDo} />\r\n      {toDos\r\n        .map((toDo, index) => (\r\n          <ToDo\r\n            toDo={toDo}\r\n            key={index}\r\n            markToDo={markToDo}\r\n            updateToDo={updateToDo}\r\n            removeToDo={removeToDo}\r\n          />\r\n        ))\r\n        .reverse()}\r\n    </StyledToDoList>\r\n  )\r\n}\r\n\r\nexport default ToDoList\r\n","export const lightTheme = {\n  title: 'light',\n  colors: {\n    primary: \"#e5e5e5\",\n    secondary: \" #f16d41\",\n    secondaryBright: \"#ffb399\",\n    white: \"#fff7f5\",\n    black: \"#17171a\",\n    grey: \"#4a4341\",\n    background: \"#FFFFFF\",\n    text: \"#280003\",\n    selection: \"#f5d0c4\",\n  }\n}\n\n","export const darkTheme = {\n  title: 'dark',\n  colors: {\n    primary: \"#280003\",\n    secondary: \"#c96645\",\n    secondaryBright: \"#a35337\",\n    white: \"#FFFFFF\",\n    black: \"#17171a\",\n    grey: \"#4a4341\",\n    background: \"#280003\",\n    text: \"#FFFFFF\",\n    selection: \"#a67b6c\",\n  }\n}","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    *:focus {\n      outline: none;\n      transition: 0.3s;\n      background-color: ${props => props.theme.colors.selection};\n    }\n  input {\n    background: transparent;\n    *:focus {\n\n    }\n  }\n  }\n  \n  body {\n    color: ${props => props.theme.colors.text};\n    background: ${props => props.theme.colors.background};\n\n\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  `;\n\n  export default GlobalStyle","import Home from './home'\r\n\r\nexport default Home\r\n","import { DefaultTheme, ThemeProvider } from 'styled-components'\nimport Header from '../../components/Header'\nimport Title from '../../components/Title'\nimport ToDoList from '../../components/ToDoList'\nimport usePersistedState from '../../utils/usePersistedState'\nimport { Page } from '../../styles/styles'\nimport { lightTheme } from '../../styles/themes/lightTheme'\nimport { darkTheme } from '../../styles/themes/darkTheme'\nimport GlobalStyle from '../../styles/global'\n\nconst Home = () => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>('theme', lightTheme)\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light' ? darkTheme : lightTheme)\n    console.log('toogled')\n    console.log(theme)\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Page>\n        <Header toggleTheme={toggleTheme} />\n        <Title />\n        <ToDoList />\n      </Page>\n    </ThemeProvider>\n  )\n}\n\nexport default Home\n","import notFound from './notFound'\r\n\r\nexport default notFound\r\n","import { Link } from 'react-router-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { Page } from '../../styles/styles'\nimport { lightTheme } from '../../styles/themes/lightTheme'\n\nconst NotFound = () => {\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <Page>\n        <h1>Page not found</h1>\n        <Link to=\"/todo-app-react\">Go back</Link>\n      </Page>\n    </ThemeProvider>\n  )\n}\n\nexport default NotFound\n","\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/home'\nimport NotFound from './pages/notFound/'\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={['/todo-app-react/', '/']} component={Home} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}