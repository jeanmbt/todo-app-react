{"version":3,"sources":["components/Header/Header.style.ts","components/Header/index.ts","components/Header/Header.tsx","components/Title/Title.style.ts","components/Title/index.ts","components/Title/Title.tsx","components/ToDoList/toDoList.style.ts","components/ToDo/ToDo.style.ts","styles/styles.ts","components/ToDoInput/ToDoInput.style.ts","components/ToDoInput/index.ts","components/ToDoInput/ToDoInput.tsx","components/ToDo/ToDo.tsx","utils/isValidInput.ts","utils/setId.ts","utils/usePersistedState.ts","components/ToDoList/index.ts","components/ToDoList/ToDoList.tsx","styles/themes/lightTheme.ts","styles/themes/darkTheme.ts","styles/global.ts","pages/home/index.ts","pages/home/home.tsx","pages/notFound/index.ts","pages/notFound/notFound.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledHeader","styled","div","props","theme","colors","primary","text","Header","useContext","ThemeContext","title","toggleTheme","style","display","justifyContent","alignItems","width","onChange","checked","checkedIcon","uncheckedIcon","offColor","secondary","offHandleColor","secondaryBright","onColor","StyledTitle","h1","Title","html","useRef","current","e","target","value","StyledToDoList","StyledToDo","Page","CheckBox","Wrapper","InputWrapper","grey","ToDoButtons","white","Button","StyledToDoInput","input","background","ToDoInput","onSubmit","edit","useState","setInput","handleChange","event","handleSubmitAdd","preventDefault","id","handleSubmitEdit","border","type","placeholder","name","maxLength","required","onClick","iconStyle","margin","ToDo","toDo","markToDo","updateToDo","removeToDo","setEdit","isMarked","maxWidth","className","isValidInput","trim","setId","array","lastItem","length","usePersistedState","key","initialState","storageValue","localStorage","getItem","JSON","parse","state","setState","useEffect","setItem","stringify","ToDoList","toDos","setToDos","todoId","newValueText","previousToDos","map","item","updatedToDos","removedToDos","filter","newToDos","index","reverse","lightTheme","black","darkTheme","GlobalStyle","createGlobalStyle","Home","setTheme","console","log","notFound","to","App","exact","path","component","NotFound","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ff75d9.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.div`\n  height: 2.5em;\n  background: ${props => props.theme.colors.primary};\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: ${props => props.theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  & > div {\n    width: 100vw;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex: 1;\n    width: 100$;\n    padding: 1em;\n  }\n  `","import Header from './Header'\n\nexport default Header","import React, { useContext } from 'react'\nimport Switch from 'react-switch'\nimport { StyledHeader } from './Header.style'\nimport { ThemeContext } from 'styled-components'\nimport { IHeader } from '../../types/theme'\n\nconst Header = (props: IHeader) => {\n  const { colors, title } = useContext(ThemeContext)\n  const { toggleTheme } = props\n\n  return (\n    <StyledHeader>\n      <div>\n        <b>TO DO</b>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '5em',\n          }}\n        >\n          {title === 'light' ? '☽  ' : '☀   '}\n\n          <Switch\n            onChange={toggleTheme}\n            checked={title === 'light'}\n            checkedIcon={false}\n            uncheckedIcon={false}\n            offColor={colors.secondary}\n            offHandleColor={colors.secondaryBright}\n            onColor={colors.secondaryBright}\n          />\n        </div>\n      </div>\n    </StyledHeader>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\r\n\r\nexport const StyledTitle = styled.h1`\r\n  font-size: 3rem;\r\n  display: block;\r\n  margin-top: 2em;\r\n`\r\n","import Title from './Title'\r\n\r\nexport default Title\r\n","import React, { useRef } from 'react'\r\nimport { StyledTitle } from './Title.style'\r\nimport ContentEditable from 'react-contenteditable'\r\n\r\nconst Title = () => {\r\n  const html = useRef('')\r\n\r\n  const handleChange = (e) => {\r\n    html.current = e.target.value\r\n  }\r\n\r\n  return (\r\n    <StyledTitle>\r\n      <ContentEditable\r\n        html={(html.current = 'Click to add a list title')}\r\n        onChange={handleChange}\r\n      ></ContentEditable>\r\n    </StyledTitle>\r\n  )\r\n}\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledToDoList = styled.div`\r\ndisplay: grid;\r\njustify-content: center;\r\nalign-items: center;\r\nflex-direction: column;\r\ngrid-template-columns: 120%;\r\n`; \r\n","import styled from 'styled-components'\r\n\r\n\r\nexport const StyledToDo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-start;\r\n  width: 100%;\r\n  margin: 0.5em 0.5em 0.5em 0;\r\n  padding: 0.2em 0.2em 0.2em 0;\r\n  overflow-wrap: anywhere;\r\n`\r\n","import styled from 'styled-components'\n\n// TODO: Put important styled components in components directory\n\nexport const Page = styled.div`\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 2em;\n  font-family: 'Inter', sans-serif;\n  width: 100vw;\n`\nexport const CheckBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 0.5em;\n  padding-left: 0.5em;\n`\n\nexport const Title = styled.h1`\n  font-size: 2.3rem;\n  display: block;\n  margin-bottom: 4vh;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-self: flex-start;\n  border-radius: 5px;\n  &:hover {\n    transition: 0.5s;\n    background-color: ${props => props.theme.colors.secondary};\n  }\n`\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  margin-bottom: 1em;\n  border: 1px solid white;\n  border-radius: 5px;\n  &:hover {\n    box-shadow: 1px 2px 2px ${props => props.theme.colors.grey};\n    border: 1px solid ${props => props.theme.colors.grey};\n    border-radius: 5px;\n  }\n`\n\nexport const ToDoButtons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  opacity: 0%;\n  color: ${props => props.theme.colors.white};\n  ${Wrapper}:hover & {\n    opacity: 1;\n  }\n`\n\nexport const Button = styled.div`\n  background-color: ${props => props.theme.colors.secondary};\n  color: white;\n  text-align: center;\n  padding: 5px 15px;\n  border-radius: 0 5px 5px 0;\n  outline: 0;\n  cursor: pointer;\n  white-space: nowrap;\n  border: 1px solid ${props => props.theme.colors.secondary};\n  &:hover {\n    box-shadow: 1px 2px 2px ${props => props.theme.colors.grey};\n    background-color: ${props => props.theme.colors.secondaryBright};\n    border: 1px solid transparent;\n  }\n`\n","import styled from 'styled-components'\r\n\r\n// const { colors } = useContext(ThemeContext)\r\n\r\nexport const StyledToDoInput = styled.input`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border: 0;\r\n  border-bottom: 1px solid ${props => props.theme.colors.grey};\r\n  flex: wrap;\r\n  width: 100%;\r\n  background-color: ${props => props.theme.colors.background};\r\n  color: ${props => props.theme.colors.text};\r\n  padding: 0.5em;\r\n  \r\n`; \r\n","import ToDoInput from './ToDoInput'\r\n\r\nexport default ToDoInput\r\n","import React, { useState } from 'react'\r\nimport { Button, InputWrapper, Wrapper } from '../../styles/styles'\r\nimport { IToDoInputProps } from '../../types/toDoInput'\r\nimport { StyledToDoInput } from './ToDoInput.style'\r\n\r\nimport { useContext } from 'react'\r\nimport { darkTheme } from '../../styles/themes/darkTheme'\r\nimport { lightTheme } from '../../styles/themes/lightTheme'\r\nimport { ThemeContext } from 'styled-components'\r\n\r\nconst ToDoInput = (props: IToDoInputProps) => {\r\n  const { colors } = useContext(ThemeContext)\r\n\r\n  const { onSubmit, edit } = props\r\n  const [input, setInput] = useState<string>('')\r\n\r\n  const handleChange = (event) => {\r\n    setInput(event.target.value)\r\n  }\r\n\r\n  const handleSubmitAdd = (event) => {\r\n    event.preventDefault()\r\n\r\n    onSubmit({\r\n      id: null,\r\n      text: input,\r\n    })\r\n    setInput('')\r\n  }\r\n\r\n  const handleSubmitEdit = (event) => {\r\n    event.preventDefault()\r\n\r\n    onSubmit({\r\n      id: edit?.id,\r\n      text: input,\r\n    })\r\n    setInput('')\r\n  }\r\n  return (\r\n    <InputWrapper>\r\n      <form onSubmit={handleSubmitEdit} style={{ border: 0 }}>\r\n        {edit ? (\r\n          <Wrapper>\r\n            <StyledToDoInput\r\n              type=\"text\"\r\n              placeholder={edit.value}\r\n              value={input}\r\n              name=\"text\"\r\n              onChange={(e) => handleChange(e)}\r\n              maxLength={40}\r\n              required\r\n            />\r\n            <Button onClick={handleSubmitEdit} onSubmit={handleSubmitEdit}>\r\n              Edit to-do\r\n            </Button>\r\n          </Wrapper>\r\n        ) : (\r\n          // Header\r\n          <Wrapper>\r\n            <StyledToDoInput\r\n              type=\"text\"\r\n              placeholder=\"add new todo\"\r\n              value={input}\r\n              name=\"text\"\r\n              onChange={(e) => handleChange(e)}\r\n              maxLength={40}\r\n              required\r\n            />\r\n            <Button onClick={handleSubmitAdd} onSubmit={handleSubmitAdd}>\r\n              Add to-do\r\n            </Button>\r\n          </Wrapper>\r\n        )}\r\n      </form>\r\n    </InputWrapper>\r\n  )\r\n}\r\n\r\nexport default ToDoInput\r\n","import React, { useState } from 'react'\r\nimport { StyledToDo } from './ToDo.style'\r\nimport {\r\n  MdCheckBox,\r\n  MdCheckBoxOutlineBlank,\r\n  MdModeEdit,\r\n  MdDelete,\r\n} from 'react-icons/md'\r\nimport ToDoInput from '../ToDoInput'\r\nimport { IToDoProps } from '../../types/toDo'\r\nimport { IEdit } from '../../types/edit'\r\nimport { CheckBox, ToDoButtons, Wrapper } from '../../styles/styles'\r\n\r\nconst iconStyle = {\r\n  margin: '0.2em',\r\n}\r\n\r\nconst ToDo = ({ toDo, markToDo, updateToDo, removeToDo }: IToDoProps) => {\r\n  const [edit, setEdit] = useState<IEdit>({\r\n    id: null,\r\n    value: '',\r\n  })\r\n\r\n  const submitUpdate = (value) => {\r\n    updateToDo(value.id, value.text)\r\n    setEdit({\r\n      id: null,\r\n      value: '',\r\n    })\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <ToDoInput edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return (\r\n    <Wrapper style={{ display: 'flex' }}>\r\n      <StyledToDo onClick={() => markToDo(toDo.id)}>\r\n        {toDo.isMarked ? (\r\n          <CheckBox>\r\n            <MdCheckBox />\r\n          </CheckBox>\r\n        ) : (\r\n          <CheckBox>\r\n            <MdCheckBoxOutlineBlank />\r\n          </CheckBox>\r\n        )}\r\n        <div style={{ maxWidth: 'fit-content' }}>{toDo.text}</div>\r\n      </StyledToDo>\r\n      <ToDoButtons>\r\n        <MdModeEdit\r\n          className=\"icon\"\r\n          style={iconStyle}\r\n          onClick={() => setEdit({ id: toDo.id, value: toDo.text })}\r\n        />\r\n        <MdDelete\r\n          className=\"icon\"\r\n          style={iconStyle}\r\n          onClick={() => removeToDo(toDo.id)}\r\n        />\r\n      </ToDoButtons>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default ToDo\r\n","export const isValidInput = (text) => {\r\n  const toDoSanitazed = text.trim()\r\n  return !!toDoSanitazed\r\n}\r\n\r\nexport * from './isValidInput'\r\n","const setId = (array) => {\r\n  const lastItem = array[array.length - 1]\r\n  return lastItem ? lastItem.id + 1 : 1\r\n}\r\n\r\nexport default setId","import { useState, useEffect, Dispatch, SetStateAction } from \"react\";\n\ntype Response<T> = [\n  T,\n  Dispatch<SetStateAction<T>>\n];\n\nfunction usePersistedState<T>( key: string, initialState: T ): Response<T> {\n  const [state, setState] = useState(() => {\n    const storageValue = localStorage.getItem(key)\n\n    if(storageValue){\n      return JSON.parse(storageValue);\n\n    } else {\n      return initialState\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(state))\n  }, [key, state]);\n\n  return [state, setState]\n}\n\nexport default usePersistedState","import ToDoList from './ToDoList'\r\n\r\nexport default ToDoList\r\n","import React, { useState } from 'react'\r\nimport { StyledToDoList } from './toDoList.style'\r\nimport ToDo from '../ToDo/ToDo'\r\nimport ToDoInput from '../ToDoInput'\r\nimport { isValidInput } from '../../utils/isValidInput'\r\nimport setId from '../../utils/setId'\r\nimport { IToDoItem } from '../../types/toDo'\r\nimport usePersistedState from '../../utils/usePersistedState'\r\n\r\nconst ToDoList = () => {\r\n  const [toDos, setToDos] = usePersistedState<IToDoItem[]>('todos', [])\r\n\r\n  const addToDo = (toDo) => {\r\n    if (!isValidInput(toDo.text)) {\r\n      return\r\n    }\r\n\r\n    const newToDos = [\r\n      ...toDos,\r\n      {\r\n        ...toDo,\r\n        id: setId(toDos),\r\n        isMarked: false,\r\n      },\r\n    ]\r\n\r\n    setToDos(newToDos)\r\n  }\r\n\r\n  const updateToDo = (todoId: number, newValueText: string) => {\r\n    if (!isValidInput(newValueText)) {\r\n      return\r\n    }\r\n\r\n    const previousToDos = toDos.map((item) => {\r\n      if (item.id === todoId) {\r\n        item.text = newValueText\r\n      }\r\n\r\n      return item\r\n    })\r\n\r\n    setToDos(previousToDos)\r\n  }\r\n\r\n  const markToDo = (id) => {\r\n    const updatedToDos = toDos.map((toDo) => {\r\n      if (toDo.id === id) {\r\n        toDo.isMarked = !toDo.isMarked\r\n      }\r\n      return toDo\r\n    })\r\n    setToDos(updatedToDos)\r\n  }\r\n\r\n  const removeToDo = (id) => {\r\n    const removedToDos = toDos.filter((toDo) => toDo.id !== id)\r\n\r\n    setToDos(removedToDos)\r\n  }\r\n\r\n  return (\r\n    <StyledToDoList>\r\n      <ToDoInput onSubmit={addToDo} />\r\n      {toDos\r\n        .map((toDo, index) => (\r\n          <ToDo\r\n            toDo={toDo}\r\n            key={index}\r\n            markToDo={markToDo}\r\n            updateToDo={updateToDo}\r\n            removeToDo={removeToDo}\r\n          />\r\n        ))\r\n        .reverse()}\r\n    </StyledToDoList>\r\n  )\r\n}\r\n\r\nexport default ToDoList\r\n","export const lightTheme = {\n  title: 'light',\n  colors: {\n    primary: \"#e5e5e5\",\n    secondary: \" #f16d41\",\n    secondaryBright: \"#ffb399\",\n    white: \"#FFFFFF\",\n    black: \"#17171a\",\n    grey: \"#e5e5e5\",\n    background: \"#FFFFFF\",\n    text: \"#280003\",\n  }\n}\n\n","export const darkTheme = {\n  title: 'dark',\n  colors: {\n    primary: \"#280003\",\n    secondary: \"#c96645\",\n    secondaryBright: \"#ffb399\",\n    white: \"#FFFFFF\",\n    black: \"#17171a\",\n    grey: \"#e5e5e5\",\n    background: \"#280003\",\n    text: \"#FFFFFF\",\n  }\n}","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n  }\n  \n  body {\n    color: ${props => props.theme.colors.text};\n    background: ${props => props.theme.colors.background};\n\n\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  `;\n\n  export default GlobalStyle","import Home from './home'\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\nimport { DefaultTheme, ThemeProvider } from 'styled-components'\nimport Header from '../../components/Header'\nimport Title from '../../components/Title'\nimport ToDoList from '../../components/ToDoList'\nimport usePersistedState from '../../utils/usePersistedState'\n\nimport { Page } from '../../styles/styles'\nimport { lightTheme } from '../../styles/themes/lightTheme'\nimport { darkTheme } from '../../styles/themes/darkTheme'\nimport GlobalStyle from '../../styles/global'\n\nconst Home = () => {\n  const [theme, setTheme] = usePersistedState<DefaultTheme>('theme', lightTheme)\n\n  const toggleTheme = () => {\n    setTheme(theme.title === 'light' ? darkTheme : lightTheme)\n    console.log('toogled')\n    console.log(theme)\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Page>\n        <Header toggleTheme={toggleTheme} />\n        <Title />\n        <ToDoList />\n      </Page>\n    </ThemeProvider>\n  )\n}\n\nexport default Home\n","import notFound from './notFound'\r\n\r\nexport default notFound\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { Page } from '../../styles/styles'\r\n\r\nimport { lightTheme } from '../../styles/themes/lightTheme'\r\nimport { darkTheme } from '../../styles/themes/darkTheme'\r\nimport { ThemeContext } from 'styled-components'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <ThemeProvider theme={lightTheme}>\r\n      <Page>\r\n        <h1>Page not found</h1>\r\n        {/* TODO: Link styled as a button */}\r\n        <Link to=\"/todo-app-react\">Go back</Link>\r\n      </Page>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default NotFound\r\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from './pages/home'\r\nimport NotFound from './pages/notFound/'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path={['/todo-app-react/', '/']} component={Home} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { ReportHandler } from 'web-vitals'\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}